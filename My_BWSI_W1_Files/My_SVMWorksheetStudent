{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Copy of SVMWorksheetStudent","version":"0.3.2","views":{},"default_view":{},"provenance":[{"file_id":"https://github.com/cjin2019/Week1_public/blob/master/SVM/SVMWorksheetStudent.ipynb","timestamp":1531405355836},{"file_id":"165CSmT99w4_Sv1UENIyvIkH7ZEw2Xeh8","timestamp":1527780043079}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"metadata":{"id":"-UimMCmGe19F","colab_type":"text"},"cell_type":"markdown","source":["# SVM Tree Worksheet"]},{"metadata":{"id":"kedW02LgKjVL","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0}}},"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","from sklearn.model_selection import train_test_split\n","import matplotlib.pyplot as plt\n","from sklearn import svm\n","from sklearn.metrics import accuracy_score\n","from sklearn.svm import SVC # \"Support vector classifier\"\n","from sklearn.model_selection import GridSearchCV\n","from sklearn.ensemble import RandomForestClassifier"],"execution_count":0,"outputs":[]},{"metadata":{"id":"rz35eT5-SMht","colab_type":"text"},"cell_type":"markdown","source":["#### Load pima indians diabetes dataset below"]},{"metadata":{"id":"Ydh9gmDkMGmu","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0},"base_uri":"https://localhost:8080/","height":1912},"outputId":"e0536e84-10d2-44df-c856-95182eb24afd","executionInfo":{"status":"ok","timestamp":1531417617838,"user_tz":240,"elapsed":417,"user":{"displayName":"Caroline J","photoUrl":"//lh5.googleusercontent.com/-UW6T_Czu5Tc/AAAAAAAAAAI/AAAAAAAAAmk/_PdmajiiHBY/s50-c-k-no/photo.jpg","userId":"115113466279912359883"}}},"cell_type":"code","source":["url = \"https://raw.githubusercontent.com/jbrownlee/Datasets/master/pima-indians-diabetes.data.csv\"\n","names = ['preg', 'plas', 'pres', 'skin', 'test', 'mass', 'pedi', 'age', 'class']\n","data = pd.read_csv(url, names = names)\n","data"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>preg</th>\n","      <th>plas</th>\n","      <th>pres</th>\n","      <th>skin</th>\n","      <th>test</th>\n","      <th>mass</th>\n","      <th>pedi</th>\n","      <th>age</th>\n","      <th>class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>6</td>\n","      <td>148</td>\n","      <td>72</td>\n","      <td>35</td>\n","      <td>0</td>\n","      <td>33.6</td>\n","      <td>0.627</td>\n","      <td>50</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>85</td>\n","      <td>66</td>\n","      <td>29</td>\n","      <td>0</td>\n","      <td>26.6</td>\n","      <td>0.351</td>\n","      <td>31</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>8</td>\n","      <td>183</td>\n","      <td>64</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>23.3</td>\n","      <td>0.672</td>\n","      <td>32</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>89</td>\n","      <td>66</td>\n","      <td>23</td>\n","      <td>94</td>\n","      <td>28.1</td>\n","      <td>0.167</td>\n","      <td>21</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>137</td>\n","      <td>40</td>\n","      <td>35</td>\n","      <td>168</td>\n","      <td>43.1</td>\n","      <td>2.288</td>\n","      <td>33</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>5</td>\n","      <td>116</td>\n","      <td>74</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>25.6</td>\n","      <td>0.201</td>\n","      <td>30</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>3</td>\n","      <td>78</td>\n","      <td>50</td>\n","      <td>32</td>\n","      <td>88</td>\n","      <td>31.0</td>\n","      <td>0.248</td>\n","      <td>26</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>10</td>\n","      <td>115</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>35.3</td>\n","      <td>0.134</td>\n","      <td>29</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>2</td>\n","      <td>197</td>\n","      <td>70</td>\n","      <td>45</td>\n","      <td>543</td>\n","      <td>30.5</td>\n","      <td>0.158</td>\n","      <td>53</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>8</td>\n","      <td>125</td>\n","      <td>96</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.232</td>\n","      <td>54</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>4</td>\n","      <td>110</td>\n","      <td>92</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>37.6</td>\n","      <td>0.191</td>\n","      <td>30</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>10</td>\n","      <td>168</td>\n","      <td>74</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>38.0</td>\n","      <td>0.537</td>\n","      <td>34</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>10</td>\n","      <td>139</td>\n","      <td>80</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>27.1</td>\n","      <td>1.441</td>\n","      <td>57</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>1</td>\n","      <td>189</td>\n","      <td>60</td>\n","      <td>23</td>\n","      <td>846</td>\n","      <td>30.1</td>\n","      <td>0.398</td>\n","      <td>59</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>5</td>\n","      <td>166</td>\n","      <td>72</td>\n","      <td>19</td>\n","      <td>175</td>\n","      <td>25.8</td>\n","      <td>0.587</td>\n","      <td>51</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>7</td>\n","      <td>100</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>30.0</td>\n","      <td>0.484</td>\n","      <td>32</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>0</td>\n","      <td>118</td>\n","      <td>84</td>\n","      <td>47</td>\n","      <td>230</td>\n","      <td>45.8</td>\n","      <td>0.551</td>\n","      <td>31</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>7</td>\n","      <td>107</td>\n","      <td>74</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>29.6</td>\n","      <td>0.254</td>\n","      <td>31</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>1</td>\n","      <td>103</td>\n","      <td>30</td>\n","      <td>38</td>\n","      <td>83</td>\n","      <td>43.3</td>\n","      <td>0.183</td>\n","      <td>33</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>1</td>\n","      <td>115</td>\n","      <td>70</td>\n","      <td>30</td>\n","      <td>96</td>\n","      <td>34.6</td>\n","      <td>0.529</td>\n","      <td>32</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>3</td>\n","      <td>126</td>\n","      <td>88</td>\n","      <td>41</td>\n","      <td>235</td>\n","      <td>39.3</td>\n","      <td>0.704</td>\n","      <td>27</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>8</td>\n","      <td>99</td>\n","      <td>84</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>35.4</td>\n","      <td>0.388</td>\n","      <td>50</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>7</td>\n","      <td>196</td>\n","      <td>90</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>39.8</td>\n","      <td>0.451</td>\n","      <td>41</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>9</td>\n","      <td>119</td>\n","      <td>80</td>\n","      <td>35</td>\n","      <td>0</td>\n","      <td>29.0</td>\n","      <td>0.263</td>\n","      <td>29</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>11</td>\n","      <td>143</td>\n","      <td>94</td>\n","      <td>33</td>\n","      <td>146</td>\n","      <td>36.6</td>\n","      <td>0.254</td>\n","      <td>51</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>10</td>\n","      <td>125</td>\n","      <td>70</td>\n","      <td>26</td>\n","      <td>115</td>\n","      <td>31.1</td>\n","      <td>0.205</td>\n","      <td>41</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>7</td>\n","      <td>147</td>\n","      <td>76</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>39.4</td>\n","      <td>0.257</td>\n","      <td>43</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>1</td>\n","      <td>97</td>\n","      <td>66</td>\n","      <td>15</td>\n","      <td>140</td>\n","      <td>23.2</td>\n","      <td>0.487</td>\n","      <td>22</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>13</td>\n","      <td>145</td>\n","      <td>82</td>\n","      <td>19</td>\n","      <td>110</td>\n","      <td>22.2</td>\n","      <td>0.245</td>\n","      <td>57</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>5</td>\n","      <td>117</td>\n","      <td>92</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>34.1</td>\n","      <td>0.337</td>\n","      <td>38</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>738</th>\n","      <td>2</td>\n","      <td>99</td>\n","      <td>60</td>\n","      <td>17</td>\n","      <td>160</td>\n","      <td>36.6</td>\n","      <td>0.453</td>\n","      <td>21</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>739</th>\n","      <td>1</td>\n","      <td>102</td>\n","      <td>74</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>39.5</td>\n","      <td>0.293</td>\n","      <td>42</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>740</th>\n","      <td>11</td>\n","      <td>120</td>\n","      <td>80</td>\n","      <td>37</td>\n","      <td>150</td>\n","      <td>42.3</td>\n","      <td>0.785</td>\n","      <td>48</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>741</th>\n","      <td>3</td>\n","      <td>102</td>\n","      <td>44</td>\n","      <td>20</td>\n","      <td>94</td>\n","      <td>30.8</td>\n","      <td>0.400</td>\n","      <td>26</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>742</th>\n","      <td>1</td>\n","      <td>109</td>\n","      <td>58</td>\n","      <td>18</td>\n","      <td>116</td>\n","      <td>28.5</td>\n","      <td>0.219</td>\n","      <td>22</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>743</th>\n","      <td>9</td>\n","      <td>140</td>\n","      <td>94</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>32.7</td>\n","      <td>0.734</td>\n","      <td>45</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>744</th>\n","      <td>13</td>\n","      <td>153</td>\n","      <td>88</td>\n","      <td>37</td>\n","      <td>140</td>\n","      <td>40.6</td>\n","      <td>1.174</td>\n","      <td>39</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>745</th>\n","      <td>12</td>\n","      <td>100</td>\n","      <td>84</td>\n","      <td>33</td>\n","      <td>105</td>\n","      <td>30.0</td>\n","      <td>0.488</td>\n","      <td>46</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>746</th>\n","      <td>1</td>\n","      <td>147</td>\n","      <td>94</td>\n","      <td>41</td>\n","      <td>0</td>\n","      <td>49.3</td>\n","      <td>0.358</td>\n","      <td>27</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>747</th>\n","      <td>1</td>\n","      <td>81</td>\n","      <td>74</td>\n","      <td>41</td>\n","      <td>57</td>\n","      <td>46.3</td>\n","      <td>1.096</td>\n","      <td>32</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>748</th>\n","      <td>3</td>\n","      <td>187</td>\n","      <td>70</td>\n","      <td>22</td>\n","      <td>200</td>\n","      <td>36.4</td>\n","      <td>0.408</td>\n","      <td>36</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>749</th>\n","      <td>6</td>\n","      <td>162</td>\n","      <td>62</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>24.3</td>\n","      <td>0.178</td>\n","      <td>50</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>750</th>\n","      <td>4</td>\n","      <td>136</td>\n","      <td>70</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>31.2</td>\n","      <td>1.182</td>\n","      <td>22</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>751</th>\n","      <td>1</td>\n","      <td>121</td>\n","      <td>78</td>\n","      <td>39</td>\n","      <td>74</td>\n","      <td>39.0</td>\n","      <td>0.261</td>\n","      <td>28</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>752</th>\n","      <td>3</td>\n","      <td>108</td>\n","      <td>62</td>\n","      <td>24</td>\n","      <td>0</td>\n","      <td>26.0</td>\n","      <td>0.223</td>\n","      <td>25</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>753</th>\n","      <td>0</td>\n","      <td>181</td>\n","      <td>88</td>\n","      <td>44</td>\n","      <td>510</td>\n","      <td>43.3</td>\n","      <td>0.222</td>\n","      <td>26</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>754</th>\n","      <td>8</td>\n","      <td>154</td>\n","      <td>78</td>\n","      <td>32</td>\n","      <td>0</td>\n","      <td>32.4</td>\n","      <td>0.443</td>\n","      <td>45</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>755</th>\n","      <td>1</td>\n","      <td>128</td>\n","      <td>88</td>\n","      <td>39</td>\n","      <td>110</td>\n","      <td>36.5</td>\n","      <td>1.057</td>\n","      <td>37</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>756</th>\n","      <td>7</td>\n","      <td>137</td>\n","      <td>90</td>\n","      <td>41</td>\n","      <td>0</td>\n","      <td>32.0</td>\n","      <td>0.391</td>\n","      <td>39</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>757</th>\n","      <td>0</td>\n","      <td>123</td>\n","      <td>72</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>36.3</td>\n","      <td>0.258</td>\n","      <td>52</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>758</th>\n","      <td>1</td>\n","      <td>106</td>\n","      <td>76</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>37.5</td>\n","      <td>0.197</td>\n","      <td>26</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>759</th>\n","      <td>6</td>\n","      <td>190</td>\n","      <td>92</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>35.5</td>\n","      <td>0.278</td>\n","      <td>66</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>760</th>\n","      <td>2</td>\n","      <td>88</td>\n","      <td>58</td>\n","      <td>26</td>\n","      <td>16</td>\n","      <td>28.4</td>\n","      <td>0.766</td>\n","      <td>22</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>761</th>\n","      <td>9</td>\n","      <td>170</td>\n","      <td>74</td>\n","      <td>31</td>\n","      <td>0</td>\n","      <td>44.0</td>\n","      <td>0.403</td>\n","      <td>43</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>762</th>\n","      <td>9</td>\n","      <td>89</td>\n","      <td>62</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>22.5</td>\n","      <td>0.142</td>\n","      <td>33</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>763</th>\n","      <td>10</td>\n","      <td>101</td>\n","      <td>76</td>\n","      <td>48</td>\n","      <td>180</td>\n","      <td>32.9</td>\n","      <td>0.171</td>\n","      <td>63</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>764</th>\n","      <td>2</td>\n","      <td>122</td>\n","      <td>70</td>\n","      <td>27</td>\n","      <td>0</td>\n","      <td>36.8</td>\n","      <td>0.340</td>\n","      <td>27</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>765</th>\n","      <td>5</td>\n","      <td>121</td>\n","      <td>72</td>\n","      <td>23</td>\n","      <td>112</td>\n","      <td>26.2</td>\n","      <td>0.245</td>\n","      <td>30</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>766</th>\n","      <td>1</td>\n","      <td>126</td>\n","      <td>60</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>30.1</td>\n","      <td>0.349</td>\n","      <td>47</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>767</th>\n","      <td>1</td>\n","      <td>93</td>\n","      <td>70</td>\n","      <td>31</td>\n","      <td>0</td>\n","      <td>30.4</td>\n","      <td>0.315</td>\n","      <td>23</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>768 rows × 9 columns</p>\n","</div>"],"text/plain":["     preg  plas  pres  skin  test  mass   pedi  age  class\n","0       6   148    72    35     0  33.6  0.627   50      1\n","1       1    85    66    29     0  26.6  0.351   31      0\n","2       8   183    64     0     0  23.3  0.672   32      1\n","3       1    89    66    23    94  28.1  0.167   21      0\n","4       0   137    40    35   168  43.1  2.288   33      1\n","5       5   116    74     0     0  25.6  0.201   30      0\n","6       3    78    50    32    88  31.0  0.248   26      1\n","7      10   115     0     0     0  35.3  0.134   29      0\n","8       2   197    70    45   543  30.5  0.158   53      1\n","9       8   125    96     0     0   0.0  0.232   54      1\n","10      4   110    92     0     0  37.6  0.191   30      0\n","11     10   168    74     0     0  38.0  0.537   34      1\n","12     10   139    80     0     0  27.1  1.441   57      0\n","13      1   189    60    23   846  30.1  0.398   59      1\n","14      5   166    72    19   175  25.8  0.587   51      1\n","15      7   100     0     0     0  30.0  0.484   32      1\n","16      0   118    84    47   230  45.8  0.551   31      1\n","17      7   107    74     0     0  29.6  0.254   31      1\n","18      1   103    30    38    83  43.3  0.183   33      0\n","19      1   115    70    30    96  34.6  0.529   32      1\n","20      3   126    88    41   235  39.3  0.704   27      0\n","21      8    99    84     0     0  35.4  0.388   50      0\n","22      7   196    90     0     0  39.8  0.451   41      1\n","23      9   119    80    35     0  29.0  0.263   29      1\n","24     11   143    94    33   146  36.6  0.254   51      1\n","25     10   125    70    26   115  31.1  0.205   41      1\n","26      7   147    76     0     0  39.4  0.257   43      1\n","27      1    97    66    15   140  23.2  0.487   22      0\n","28     13   145    82    19   110  22.2  0.245   57      0\n","29      5   117    92     0     0  34.1  0.337   38      0\n","..    ...   ...   ...   ...   ...   ...    ...  ...    ...\n","738     2    99    60    17   160  36.6  0.453   21      0\n","739     1   102    74     0     0  39.5  0.293   42      1\n","740    11   120    80    37   150  42.3  0.785   48      1\n","741     3   102    44    20    94  30.8  0.400   26      0\n","742     1   109    58    18   116  28.5  0.219   22      0\n","743     9   140    94     0     0  32.7  0.734   45      1\n","744    13   153    88    37   140  40.6  1.174   39      0\n","745    12   100    84    33   105  30.0  0.488   46      0\n","746     1   147    94    41     0  49.3  0.358   27      1\n","747     1    81    74    41    57  46.3  1.096   32      0\n","748     3   187    70    22   200  36.4  0.408   36      1\n","749     6   162    62     0     0  24.3  0.178   50      1\n","750     4   136    70     0     0  31.2  1.182   22      1\n","751     1   121    78    39    74  39.0  0.261   28      0\n","752     3   108    62    24     0  26.0  0.223   25      0\n","753     0   181    88    44   510  43.3  0.222   26      1\n","754     8   154    78    32     0  32.4  0.443   45      1\n","755     1   128    88    39   110  36.5  1.057   37      1\n","756     7   137    90    41     0  32.0  0.391   39      0\n","757     0   123    72     0     0  36.3  0.258   52      1\n","758     1   106    76     0     0  37.5  0.197   26      0\n","759     6   190    92     0     0  35.5  0.278   66      1\n","760     2    88    58    26    16  28.4  0.766   22      0\n","761     9   170    74    31     0  44.0  0.403   43      1\n","762     9    89    62     0     0  22.5  0.142   33      0\n","763    10   101    76    48   180  32.9  0.171   63      0\n","764     2   122    70    27     0  36.8  0.340   27      0\n","765     5   121    72    23   112  26.2  0.245   30      0\n","766     1   126    60     0     0  30.1  0.349   47      1\n","767     1    93    70    31     0  30.4  0.315   23      0\n","\n","[768 rows x 9 columns]"]},"metadata":{"tags":[]},"execution_count":3}]},{"metadata":{"id":"OVd3yPrQ3LDG","colab_type":"text"},"cell_type":"markdown","source":["#### Split data into test and train set with the test_size being 25 %"]},{"metadata":{"id":"kOR7RCrf5P_k","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0}}},"cell_type":"code","source":["feature_names = ['preg','plas','skin','test','mass','pedi', 'age']\n","X = data.loc[:, 'preg': 'age']\n","y = data['class']\n","\n","# split X and y into training and testing sets\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=0)"],"execution_count":0,"outputs":[]},{"metadata":{"id":"v7lQh69N3YR3","colab_type":"text"},"cell_type":"markdown","source":["#### Create a model with sklearn's SVC and a high gamma value (perhaps 1.0)"]},{"metadata":{"id":"9rYQecrQ8yjn","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0},"base_uri":"https://localhost:8080/","height":86},"outputId":"f714b979-ddab-4839-8e7b-d4a2226d6f4d","executionInfo":{"status":"ok","timestamp":1531417618864,"user_tz":240,"elapsed":325,"user":{"displayName":"Caroline J","photoUrl":"//lh5.googleusercontent.com/-UW6T_Czu5Tc/AAAAAAAAAAI/AAAAAAAAAmk/_PdmajiiHBY/s50-c-k-no/photo.jpg","userId":"115113466279912359883"}}},"cell_type":"code","source":["svcClf = SVC(gamma = 1.0, random_state = 0)\n","svcClf.fit(X_train, y_train)"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["SVC(C=1.0, cache_size=200, class_weight=None, coef0=0.0,\n","  decision_function_shape='ovr', degree=3, gamma=1.0, kernel='rbf',\n","  max_iter=-1, probability=False, random_state=0, shrinking=True,\n","  tol=0.001, verbose=False)"]},"metadata":{"tags":[]},"execution_count":5}]},{"metadata":{"id":"qdiqjUje4ll-","colab_type":"text"},"cell_type":"markdown","source":["#### Print accuracy of test data and training data (the model should be trained/'fit' on the training data)"]},{"metadata":{"id":"O5LqepHk9S0M","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0},"base_uri":"https://localhost:8080/","height":34},"outputId":"4f5394a9-38f9-494e-8901-81a1a5f10771","executionInfo":{"status":"ok","timestamp":1531417619334,"user_tz":240,"elapsed":266,"user":{"displayName":"Caroline J","photoUrl":"//lh5.googleusercontent.com/-UW6T_Czu5Tc/AAAAAAAAAAI/AAAAAAAAAmk/_PdmajiiHBY/s50-c-k-no/photo.jpg","userId":"115113466279912359883"}}},"cell_type":"code","source":["y_test_pred = svcClf.predict(X_test)\n","\n","acc = accuracy_score(y_test, y_test_pred)\n","\n","acc"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.6770833333333334"]},"metadata":{"tags":[]},"execution_count":6}]},{"metadata":{"id":"fC7VlLtI3ZjQ","colab_type":"text"},"cell_type":"markdown","source":["#### Create a model with sklearn's SVC and a low gamma value (perhaps .001)"]},{"metadata":{"id":"3vVHnWuY9pFN","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0},"base_uri":"https://localhost:8080/","height":86},"outputId":"85911088-febc-437c-d3ce-a086c19fb7f7","executionInfo":{"status":"ok","timestamp":1531417619899,"user_tz":240,"elapsed":254,"user":{"displayName":"Caroline J","photoUrl":"//lh5.googleusercontent.com/-UW6T_Czu5Tc/AAAAAAAAAAI/AAAAAAAAAmk/_PdmajiiHBY/s50-c-k-no/photo.jpg","userId":"115113466279912359883"}}},"cell_type":"code","source":["svcClf = SVC(gamma = .001)\n","svcClf.fit(X_train, y_train)"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["SVC(C=1.0, cache_size=200, class_weight=None, coef0=0.0,\n","  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',\n","  max_iter=-1, probability=False, random_state=None, shrinking=True,\n","  tol=0.001, verbose=False)"]},"metadata":{"tags":[]},"execution_count":7}]},{"metadata":{"id":"JQB-U50H4mIx","colab_type":"text"},"cell_type":"markdown","source":["#### Print accuracy of training data and test data"]},{"metadata":{"id":"tr4DGB309s9a","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0},"base_uri":"https://localhost:8080/","height":34},"outputId":"e73ebdeb-d713-47b4-fd0e-97ebd3f5057b","executionInfo":{"status":"ok","timestamp":1531417620410,"user_tz":240,"elapsed":259,"user":{"displayName":"Caroline J","photoUrl":"//lh5.googleusercontent.com/-UW6T_Czu5Tc/AAAAAAAAAAI/AAAAAAAAAmk/_PdmajiiHBY/s50-c-k-no/photo.jpg","userId":"115113466279912359883"}}},"cell_type":"code","source":["y_train_pred = svcClf.predict(X_train)\n","\n","acc_train = accuracy_score(y_train, y_train_pred)\n","\n","y_test_pred = svcClf.predict(X_test)\n","\n","acc_test = accuracy_score(y_test, y_test_pred)\n","\n","acc_train, acc_test"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(0.8402777777777778, 0.7552083333333334)"]},"metadata":{"tags":[]},"execution_count":8}]},{"metadata":{"id":"TA9xLHAEIKXY","colab_type":"text"},"cell_type":"markdown","source":["##### Explain the accuracy results below. "]},{"metadata":{"id":"fE_bPc2KISFi","colab_type":"text"},"cell_type":"markdown","source":["Your answer here <br>"]},{"metadata":{"id":"Lv21xang3ZAa","colab_type":"text"},"cell_type":"markdown","source":["## GridSearchCV\n","\n","There are several parameters to tune. Instead of tuning the parameters one by one, GridSearchCV does an exhaustive search over provided parameters. <br><br>"]},{"metadata":{"id":"gr2EOA2LYvoF","colab_type":"text"},"cell_type":"markdown","source":["###Use gamma, C and decision_function_shape as parameters and GridSearchCV to find the best parameters with kernel='rbf'<br>\n","Don't know what decision_function_shape is, look at the SVC documentation <br>\n","Don't know how to use GridSearchCV, google it!<br><br>"]},{"metadata":{"id":"zmjogZlyMVMf","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0}}},"cell_type":"code","source":["def svc_param_selection(X, y):\n","    Cs = [.00001, 0.001, 0.01, 0.1, 1, 10]\n","    gammas = [0.001, 0.01, 0.1, 1]\n","    param_grid = {'C': Cs, 'gamma' : gammas}\n","    grid_search = GridSearchCV(svm.SVC(kernel='rbf'), param_grid)\n","    grid_search.fit(X, y)\n","    return grid_search.best_params_"],"execution_count":0,"outputs":[]},{"metadata":{"id":"Yfyho8h_Y9_t","colab_type":"text"},"cell_type":"markdown","source":["### Using the optimal parameters you found, print the accuracy"]},{"metadata":{"id":"7p0actkaMxb9","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0},"base_uri":"https://localhost:8080/","height":34},"outputId":"9d1f8978-da47-41ac-c873-015fcb8e5a83","executionInfo":{"status":"ok","timestamp":1531417622638,"user_tz":240,"elapsed":1579,"user":{"displayName":"Caroline J","photoUrl":"//lh5.googleusercontent.com/-UW6T_Czu5Tc/AAAAAAAAAAI/AAAAAAAAAmk/_PdmajiiHBY/s50-c-k-no/photo.jpg","userId":"115113466279912359883"}}},"cell_type":"code","source":["params = svc_param_selection(X_train, y_train)\n","\n","svcClf = SVC(C = params['C'], gamma = params['gamma'], random_state = 0)\n","svcClf.fit(X_train, y_train)\n","\n","acc_train = accuracy_score(y_train, y_train_pred)\n","\n","y_test_pred = svcClf.predict(X_test)\n","\n","acc_test = accuracy_score(y_test, y_test_pred)\n","\n","acc_train, acc_test"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(0.8402777777777778, 0.7552083333333334)"]},"metadata":{"tags":[]},"execution_count":10}]},{"metadata":{"id":"kfY6H6PO1vJD","colab_type":"text"},"cell_type":"markdown","source":["### Create an ensemble that includes svm and random forest (use your code from the decision trees notebook)\n","### Use predict_proba to get probabilities and decide a method to comebine the predictions "]},{"metadata":{"id":"PYbVYQgnOqpP","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0},"base_uri":"https://localhost:8080/","height":72},"outputId":"3b714eda-07bf-4730-9ead-a1fd0107f9b7","executionInfo":{"status":"ok","timestamp":1531417938199,"user_tz":240,"elapsed":280,"user":{"displayName":"Caroline J","photoUrl":"//lh5.googleusercontent.com/-UW6T_Czu5Tc/AAAAAAAAAAI/AAAAAAAAAmk/_PdmajiiHBY/s50-c-k-no/photo.jpg","userId":"115113466279912359883"}}},"cell_type":"code","source":["from sklearn.ensemble import VotingClassifier\n","\n","clf1 = RandomForestClassifier()\n","#clf1.fit(X_train, y_train)\n","clf2 = SVC(C = params['C'], gamma = params['gamma'], random_state = 0)\n","#clf2.fit(X_train, y_train)\n","\n","eclf = VotingClassifier(estimators=[('rf', clf1), ('svc', clf2)])\n","\n","\n","eclf.fit(X_train, y_train)\n","\n","y_test_pred = eclf.predict(X_test)\n"],"execution_count":0,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/sklearn/preprocessing/label.py:151: DeprecationWarning: The truth value of an empty array is ambiguous. Returning False, but in future this will result in an error. Use `array.size > 0` to check that an array is not empty.\n","  if diff:\n"],"name":"stderr"}]},{"metadata":{"id":"Z8TshsTsn1v6","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0}}},"cell_type":"code","source":[""],"execution_count":0,"outputs":[]},{"metadata":{"id":"aQl_djoy_f-X","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0}}},"cell_type":"code","source":[""],"execution_count":0,"outputs":[]}]}